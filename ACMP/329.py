# Лесенка-2
# (Время: 1 сек. Память: 16 Мб Сложность: 37%)
# Вова стоит перед лесенкой из N ступеней. На каждой из ступеней написаны произвольные целые числа. Первым шагом Вова может перейти на первую ступень или, перепрыгнув через первую, сразу оказаться на второй. Также он поступает и дальше, пока не достигнет N-ой ступени. Посчитаем сумму всех чисел, написанных на ступенях через которые прошел Вова.

# Требуется написать программу, которая определит оптимальный маршрут Вовы, при котором, шагая, он получит наибольшую сумму.

# Входные данные
# Входной файл INPUT.TXT содержит в первой строке натуральное число N – количество ступеней лестницы (2 ≤ N ≤ 1000). Во второй строке через пробел заданы числа, написанные на ступенях лестницы, начиная с первой. Числа, написанные на ступенях, не превосходят по модулю 1000.

# Выходные данные
# Выходной файл OUTPUT.TXT должен содержать в первой строке наибольшее значение суммы. Во второй строке должны быть записаны через пробел номера ступеней по возрастанию, по которым должен шагать Вова. Если существует несколько различных правильных маршрутов, то можно вывести любой из них.
n = int(input())
arr = [int(i) for i in input().split()]
d = [0 for i in range(n+1)]
p = [0 for i in range(n+1)]
p[0]=-1
p[1] = 0
d[0] = 0
d[1] = arr[0]

for i in range(2,n+1):
    if d[i-2]>=d[i-1]:
        d[i] = d[i-2]+arr[i-1]
        p[i] = i-2
    else:
        d[i] = d[i-1]+arr[i-1]
        p[i] = i-1
print(d[-1])
l=[len(arr)]
start = p[-1]
while start!=-1:
    l.append(start)
    start = p[start]
for i in reversed(l):
    if i:
        print(i,end=' ')