# Маршрут
# (Время: 1 сек. Память: 16 Мб Сложность: 38%)
# В таблице из N строк и N столбцов клетки заполнены цифрами от 0 до 9. Требуется найти такой путь из клетки (1, 1) в клетку (N, N), чтобы сумма цифр в клетках, через которые он пролегает, была минимальной; из любой клетки ходить можно только вниз или вправо.

# Входные данные
# В первой строке входного файла INPUT.TXT находится число N. В следующих N строках содержатся по N цифр без пробелов. (2 ≤ N ≤ 250)

# Выходные данные
# В выходной файл OUTPUT.TXT выведите N строк по N символов. Символ «#» (решетка) показывает, что маршрут проходит через эту клетку, а «.» (точка) - что не проходит. Если путей с минимальной суммой цифр несколько, можно вывести любой.
N=int(input())
l =[]
for i in range(N):
    l.append([int(i) for i in input()])
prev = l[0]
ans=[]
if N==1:
    print('#')
else:
    for i in range(1,N):
        prev[i]=prev[i-1]+prev[i]
    ans.append(prev[:])
    S = [0 for i in range(N)]
    for i in range(1,N):
        S[0]=prev[0]+l[i][0]
        for j in range(1,N):
            S[j]=l[i][j]+min(S[j-1],prev[j])
        prev=S[:]
        ans.append(S[:])
res=[['.' for i in range(N)] for j in range(N)]
res[0][0],res[-1][-1]='#','#'
n,m=N-1,N-1
while n>0 and m>0:
	if (ans[n][m-1]>ans[n-1][m]):
	    res[n-1][m]='#'
	    n-=1
	else:
		res[n][m-1]='#'
		m-=1
while n>0:
	res[n][0]='#'
	n-=1
while m>0:
	res[0][m]='#'
	m-=1
for i in res:
    print(''.join(i))